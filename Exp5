#include <stdio.h>

int main() {
    int arrival_time[] = {0, 1, 2, 4};
    int burst_time[] = {5, 3, 3, 1};
    int num_processes = sizeof(arrival_time) / sizeof(int);

    int remaining_time[num_processes];
    int completion_time[num_processes];
    int waiting_time[num_processes];
    int turnaround_time[num_processes];
    int total_waiting_time = 0;
    int total_turnaround_time = 0;
    int current_time = 0;
    int completed_processes = 0;
    int i;

   
    for (i = 0; i < num_processes; i++) {
        remaining_time[i] = burst_time[i];
    }

    while (completed_processes < num_processes) {
        int shortest_process = -1;
        int shortest_time = 1000000;

      
        for (i = 0; i < num_processes; i++) {
            if (arrival_time[i] <= current_time && remaining_time[i] < shortest_time && remaining_time[i] > 0) {
                shortest_process = i;
                shortest_time = remaining_time[i];
            }
        }

      
        if (shortest_process == -1) {
            current_time++;
        } else {
         
            waiting_time[shortest_process] = current_time - arrival_time[shortest_process];
            remaining_time[shortest_process]--;

         
            if (remaining_time[shortest_process] == 0) {
                completion_time[shortest_process] = current_time + 1;
                turnaround_time[shortest_process] = completion_time[shortest_process] - arrival_time[shortest_process];
                total_waiting_time += waiting_time[shortest_process];
                total_turnaround_time += turnaround_time[shortest_process];
                completed_processes++;
            }

            current_time++;
        }
    }

   
    printf("Process\tArrival Time\tBurst Time\tWaiting Time\tTurnaround Time\n");
    for (i = 0; i < num_processes; i++) {
        printf("P%d\t%d\t\t%d\t\t%d\t\t%d\n", i + 1, arrival_time[i], burst_time[i], waiting_time[i], turnaround_time[i]);
    }

    float avg_waiting_time = (float) total_waiting_time / num_processes;
    float avg_turnaround_time = (float) total_turnaround_time / num_processes;
    printf("Average waiting time: %.2f ms\n", avg_waiting_time);
    printf("Average turnaround time: %.2f ms\n", avg_turnaround_time);

    return 0;
}
